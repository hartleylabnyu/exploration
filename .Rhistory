data.model.11,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.model.logRT.trial.children
data.model.11
data.model.11 <- data.model %>%
filter(ageGroup3 == "Children") %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
age, subID, trialID)) %>%
drop_na()
#scale continuous variables
data.model.11$selectedUncertainty <- scale_this(data.model.11$selectedUncertainty)
data.model.11$selectedValue <- scale_this(data.model.11$selectedValue)
data.model.11$selectedNovelty <- scale_this(data.model.11$selectedNovelty)
data.model.11$ageScaled <- scale_this(data.model.11$age)
data.model.11$trialScaled <- scale_this(data.model.11$trialID)
data.model.11$logRT <- log(data.model.11$RT)
data.model.11
selectedUncertainty.model.logRT.trial.children <- mixed(logRT ~
selectedUncertainty +
selectedValue +
selectedNovelty +
selectedUncertainty:ageScaled +
selectedValue:ageScaled +
selectedNovelty:ageScaled +
ageScaled +
trialID +
(selectedUncertainty + selectedValue + selectedNovelty || subID),
data.model.11,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.model.logRT.trial.childre
selectedUncertainty.model.logRT.trial.children
#select data
data.model.11 <- data.model %>%
filter(ageGroup3 == "Children") %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
age, subID, trialID)) %>%
drop_na()
#scale continuous variables
data.model.11$selectedUncertainty <- scale_this(data.model.11$selectedUncertainty)
data.model.11$selectedValue <- scale_this(data.model.11$selectedValue)
data.model.11$selectedNovelty <- scale_this(data.model.11$selectedNovelty)
data.model.11$ageScaled <- scale_this(data.model.11$age)
data.model.11$trialScaled <- scale_this(data.model.11$trialID)
data.model.11$logRT <- log(data.model.11$RT)
#run model
selectedUncertainty.model.logRT.trial.children <- mixed(logRT ~
selectedUncertainty +
selectedValue +
selectedNovelty +
selectedUncertainty:ageScaled +
selectedValue:ageScaled +
selectedNovelty:ageScaled +
ageScaled +
trialScaled +
(selectedUncertainty + selectedValue + selectedNovelty || subID),
data.model.11,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.model.logRT.trial.children
# main effects of:
# uncertainty
# novelty
# trial
#select data
data.model.11 <- data.model %>%
filter(ageGroup3 == "Children") %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
age, subID, trialID)) %>%
drop_na()
#scale continuous variables
data.model.11$selectedUncertainty <- scale_this(data.model.11$selectedUncertainty)
data.model.11$selectedValue <- scale_this(data.model.11$selectedValue)
data.model.11$selectedNovelty <- scale_this(data.model.11$selectedNovelty)
data.model.11$ageScaled <- scale_this(data.model.11$age)
data.model.11$trialScaled <- scale_this(data.model.11$trialID)
data.model.11$logRT <- log(data.model.11$RT)
#run model
selectedUncertainty.model.logRT.trial.children <- mixed(logRT ~
selectedUncertainty +
selectedValue +
selectedNovelty +
selectedUncertainty:ageScaled +
selectedValue:ageScaled +
selectedNovelty:ageScaled +
ageScaled +
trialScaled +
(selectedUncertainty + selectedValue + selectedNovelty + trialScaled || subID),
data.model.11,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.model.logRT.trial.children
# main effects of:
# uncertainty
# novelty
# trial
#select data
data.model.11 <- data.model %>%
filter(ageGroup3 == "Children") %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
age, subID, trialID)) %>%
drop_na()
#scale continuous variables
data.model.11$selectedUncertainty <- scale_this(data.model.11$selectedUncertainty)
data.model.11$selectedValue <- scale_this(data.model.11$selectedValue)
data.model.11$selectedNovelty <- scale_this(data.model.11$selectedNovelty)
data.model.11$ageScaled <- scale_this(data.model.11$age)
data.model.11$trialScaled <- scale_this(data.model.11$trialID)
data.model.11$logRT <- log(data.model.11$RT)
#run model
selectedUncertainty.model.logRT.trial.children <- mixed(logRT ~
selectedUncertainty +
selectedValue +
selectedNovelty +
selectedUncertainty:ageScaled +
selectedValue:ageScaled +
selectedNovelty:ageScaled +
ageScaled +
trialScaled +
(selectedUncertainty + selectedValue + selectedNovelty || subID),
data.model.11,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.model.logRT.trial.children
# main effects of:
# uncertainty
# novelty
# trial
selectedUncertainty.model.logRT.merMod <- mixed(logRT ~
selectedUncertainty +
selectedUncertainty:ageScaled +
selectedValue +
selectedValue:ageScaled +
selectedNovelty +
selectedNovelty:ageScaled +
ageScaled +
(selectedUncertainty + selectedValue + selectedNovelty | subID),
data.model.filtered,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
rt_model_plot <- plot_model(selectedUncertainty.model.logRT.merMod,
type = "int",
mdrt.values = "meansd")
rt_model_plot
selectedUncertainty.model.logRT.merMod <- mixed(logRT ~
selectedUncertainty +
selectedUncertainty:ageScaled +
selectedValue +
selectedValue:ageScaled +
selectedNovelty +
selectedNovelty:ageScaled +
ageScaled +
(selectedUncertainty + selectedValue + selectedNovelty | subID),
data.model.10,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
rt_model_plot <- plot_model(selectedUncertainty.model.logRT.merMod,
type = "int",
mdrt.values = "meansd")
rt_model_plot
selectedUncertainty.model.logRT.merMod <- mixed(logRT ~
selectedUncertainty +
selectedUncertainty:ageScaled +
selectedValue +
selectedValue:ageScaled +
selectedNovelty +
selectedNovelty:ageScaled +
ageScaled +
(selectedUncertainty + selectedValue + selectedNovelty || subID),
data.model.10,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
rt_model_plot <- plot_model(selectedUncertainty.model.logRT.merMod,
type = "int",
mdrt.values = "meansd")
rt_model_plot
rt_selectedUncertainty_plot <- ggplot(data.model, aes(x = selectedUncertainty, y = logRT, color = ageGroup3, fill = ageGroup3)) +
geom_point(size = .1, alpha = .1) +
geom_smooth(method = "lm") +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Uncertainty of Selected Option") +
ylab("Log RT") +
explo.theme
rt_selectedUncertainty_plot
rt_selectedUncertainty_plot <- ggplot(data.model.10, aes(x = selectedUncertainty, y = logRT, color = ageGroup3, fill = ageGroup3)) +
geom_point(size = .1, alpha = .1) +
geom_smooth(method = "lm") +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Uncertainty of Selected Option") +
ylab("Log RT") +
explo.theme
rt_selectedUncertainty_plot
data.model$logRT <- log(data.model$RT)
rt_selectedUncertainty_plot <- ggplot(data.model, aes(x = selectedUncertainty, y = logRT, color = ageGroup3, fill = ageGroup3)) +
geom_point(size = .1, alpha = .1) +
geom_smooth(method = "lm") +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Uncertainty of Selected Option") +
ylab("Log RT") +
explo.theme
rt_selectedUncertainty_plot
rt_selectedValue_plot <- ggplot(data.model, aes(x = selectedValue, y = logRT, color = ageGroup3, fill = ageGroup3)) +
geom_point(size = .1, alpha = .1) +
geom_smooth(method = "lm") +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Expected Value of Selected Option") +
ylab("Log RT") +
explo.theme
rt_selectedValue_plot
rt_selectedNovelty_plot <- ggplot(data.model, aes(x = selectedNovelty, y = logRT, color = ageGroup3, fill = ageGroup3)) +
geom_point(size = .1, alpha = .1) +
geom_smooth(method = "lm") +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Novelty of Selected Option") +
ylab("Log RT") +
explo.theme
rt_selectedNovelty_plot
temp <- data.model %>%
mutate(uncertaintyBin = cut(selectedUncertainty, 10),
valueBin = cut(selectedValue, 10),
noveltyBin = cut(selectedNovelty, 10))
uncertaintyRTMeans <- temp %>%
group_by(uncertaintyBin, ageGroup3) %>%
summarize(meanLogRT = mean(logRT, na.rm = T),
seLogRT = se(logRT))
valueRTMeans <- temp %>%
group_by(valueBin, ageGroup3) %>%
summarize(meanLogRT = mean(logRT, na.rm = T),
seLogRT = se(logRT))
noveltyRTMeans <- temp %>%
group_by(noveltyBin, ageGroup3) %>%
summarize(meanLogRT = mean(logRT, na.rm = T),
seLogRT = se(logRT))
#Uncertainty
ggplot(uncertaintyRTMeans, aes(x = uncertaintyBin, y = meanLogRT, color = ageGroup3)) +
geom_point() +
geom_line(aes(group = ageGroup3)) +
geom_errorbar(aes(ymin = meanLogRT - seLogRT, ymax = meanLogRT + seLogRT), width = .1) +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("uncertainty") +
ylab("Mean Log RT") +
explo.theme
#Novelty
ggplot(noveltyRTMeans, aes(x = noveltyBin, y = meanLogRT, color = ageGroup3)) +
geom_point() +
geom_line(aes(group = ageGroup3)) +
geom_errorbar(aes(ymin = meanLogRT - seLogRT, ymax = meanLogRT + seLogRT), width = .1) +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Novelty") +
ylab("Mean Log RT") +
explo.theme
#Value
ggplot(valueRTMeans, aes(x = valueBin, y = meanLogRT, color = ageGroup3)) +
geom_point() +
geom_line(aes(group = ageGroup3)) +
geom_errorbar(aes(ymin = meanLogRT - seLogRT, ymax = meanLogRT + seLogRT), width = .1) +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Expected Value") +
ylab("Mean Log RT") +
explo.theme
ggplot(uncertaintyRTMeans, aes(x = uncertaintyBin, y = meanLogRT, color = ageGroup3)) +
geom_point() +
geom_line(aes(group = ageGroup3)) +
geom_errorbar(aes(ymin = meanLogRT - seLogRT, ymax = meanLogRT + seLogRT), width = .1) +
scale_color_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("uncertainty") +
ylab("Mean Log RT") +
explo.theme
#select data
data.model.9 <- data.model %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
age, subID, trialID)) %>%
drop_na()
#scale continuous variables
data.model.9$selectedUncertainty <- scale_this(data.model.9$selectedUncertainty)
data.model.9$selectedValue <- scale_this(data.model.9$selectedValue)
data.model.9$selectedNovelty <- scale_this(data.model.9$selectedNovelty)
data.model.9$ageScaled <- scale_this(data.model.9$age)
data.model.9$trialScaled <- scale_this(data.model.9$trialID)
data.model.9$logRT <- log(data.model.9$RT)
#run model
selectedUncertainty.age.model.trial.RT <- mixed(logRT ~
selectedUncertainty +
selectedUncertainty:ageScaled +
selectedValue +
selectedValue:ageScaled +
selectedNovelty +
selectedNovelty:ageScaled +
ageScaled +
trialScaled +
(selectedUncertainty + selectedValue + selectedNovelty | subID),
data.model.9,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T)
selectedUncertainty.age.model.trial.RT
# main effect of uncertainty
# main effect of value
# main effect of novelty
# main effect of trial
# age x uncertainty
data.model.12 <- data.model %>%
select(c(RT, selectedUncertainty, selectedValue, selectedNovelty,
evDiff, varDiff, novelDiff, subID)) %>%
drop_na()
#scale continuous variables
data.model.12$selectedUncertainty <- scale_this(data.model.12$selectedUncertainty)
data.model.12$selectedValue <- scale_this(data.model.12$selectedValue)
data.model.12$selectedNovelty <- scale_this(data.model.12$selectedNovelty)
data.model.12$evDiffScaled <- scale_this(data.model.12$evDiff)
data.model.12$varDiffScaled <- scale_this(data.model.12$varDiff)
data.model.12$novelDiffScaled <- scale_this(data.model.12$novelDiff)
data.model.12$logRT <- log(data.model.12$RT)
#first, extract uncertainty slope from choice model (w/o age)
feature.choice.merMod <- mixed(leftChoice ~
evDiffScaled +
varDiffScaled +
novelDiffScaled +
(evDiffScaled + varDiffScaled + novelDiffScaled | subID),
data.model.12,
family = binomial,
method = "LRT",
control = glmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
data.model.12 <- data.model %>%
select(c(leftChoice, RT, selectedUncertainty, selectedValue, selectedNovelty,
evDiff, varDiff, novelDiff, subID)) %>%
drop_na()
#scale continuous variables
data.model.12$selectedUncertainty <- scale_this(data.model.12$selectedUncertainty)
data.model.12$selectedValue <- scale_this(data.model.12$selectedValue)
data.model.12$selectedNovelty <- scale_this(data.model.12$selectedNovelty)
data.model.12$evDiffScaled <- scale_this(data.model.12$evDiff)
data.model.12$varDiffScaled <- scale_this(data.model.12$varDiff)
data.model.12$novelDiffScaled <- scale_this(data.model.12$novelDiff)
data.model.12$logRT <- log(data.model.12$RT)
feature.choice.merMod <- mixed(leftChoice ~
evDiffScaled +
varDiffScaled +
novelDiffScaled +
(evDiffScaled + varDiffScaled + novelDiffScaled | subID),
data.model.12,
family = binomial,
method = "LRT",
control = glmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
choiceUncertaintySlope <- ranef(feature.choice.merMod)$subID$re1.varDiffScaled
subID <- rownames(ranef(feature.choice.merMod)$subID)
choiceREs <- data.frame(subID, choiceUncertaintySlope)
#then, extract uncertainty slope from RT model (w/o age)
selectedUncertainty.logRT.merMod <- mixed(logRT ~
selectedUncertainty +
selectedValue +
selectedNovelty +
(selectedUncertainty + selectedValue + selectedNovelty | subID),
data.model.12,
method = "S",
control = lmerControl(optimizer = "bobyqa"),
expand_re = T,
return = "merMod")
RTUncertaintySlope <- ranef(selectedUncertainty.logRT.merMod)$subID$re1.selectedUncertainty
subID <- rownames(ranef(selectedUncertainty.logRT.merMod)$subID)
RTREs <- data.frame(subID, RTUncertaintySlope)
#combine
temp <- full_join(choiceREs, RTREs, by = c("subID"))
temp$subID <- as.numeric(temp$subID)
uncertaintyREs <- demographicData %>%
select(subID, age, ageGroup3) %>%
right_join(temp, by = c("subID"))
uncertaintyREs$ageScaled <- scale_this(uncertaintyREs$age)
uncertaintyREs$choiceSlopeScaled <- scale_this(uncertaintyREs$choiceUncertaintySlope)
uncertaintyREs$RTSlopeScaled <- scale_this(uncertaintyREs$RTUncertaintySlope)
#run regression
uncertaintyRelation.lm <- lm(choiceSlopeScaled ~ ageScaled * RTSlopeScaled, data = uncertaintyREs)
pander(uncertaintyRelation.lm)
uncertaintyRelation_plot <- ggplot(uncertaintyREs, aes(x = RTUncertaintySlope, y = choiceUncertaintySlope)) +
geom_point(color = color2, size = 1, alpha = 1) +
geom_smooth(method = "lm", color = color1, fill = color1) +
xlab("Uncertainty Random Effect (RT)") +
ylab("Uncertainty Random Effect (Choice)") +
explo.theme
uncertaintyRelation_plot
#import mem Data
memData <- read_csv(file.path(dataDir, "explo_mem_data.csv"))
# get sub ages
ageData <- demographicData %>%
select(subID, age, ageGroup3, ageGroup4, IQ)
#combine with demographic data
memData <- inner_join(memData, ageData, by = c("subID"))
#determine response made and compute accuracy
memData <- memData %>%
mutate(resp = case_when(respKey == 1 ~ imageOrder_1,
respKey == 2 ~ imageOrder_2,
respKey == 3 ~ imageOrder_3,
respKey == 4 ~ imageOrder_4,
respKey == 5 ~ imageOrder_5),
mem_resp = case_when(resp == 1 ~ "High",
resp == 2 ~ "Low",
resp == 3 ~ "Med",
resp == 4 ~ "High_Diff",
resp == 5 ~ "Foil"),
mem_acc = case_when(resp == 1 ~ 1,
resp != 1 ~ 0))
memData$mem_resp <- factor(memData$mem_resp, levels = c("High", "Med", "Low", "High_Diff", "Foil"))
sub_mem_acc <- memData %>%
group_by(subID) %>%
summarize(mean_mem_acc = mean(mem_acc, na.rm = T))
mem_acc.ttest <- t.test(sub_mem_acc$mean_mem_acc, mu = .2)
mem_acc.ttest
group_mem_acc <- sub_mem_acc %>%
summarize(group_mean_mem_acc = mean(mean_mem_acc),
mem_se = se(mean_mem_acc))
group_mem_acc
memData$ageScaled <- scale_this(memData$age)
mem.age.model <- glm(mem_acc ~ ageScaled, family = "binomial", data = memData)
pander(summary(mem.age.model))
#no effect of age on memory accuracy
meanMemData <- memData %>%
group_by(subID, age) %>%
summarize(meanMemAcc = mean(mem_acc, na.rm = T))
meanMemPlot <- ggplot(meanMemData, aes(x = age, y = meanMemAcc)) +
geom_point(color = color1) +
geom_smooth(method = "lm", color = color2, fill = color2) +
ylab("Mean Memory Accuracy") +
xlab("Age") +
explo.theme
meanMemPlot
meanMemData <- memData %>%
group_by(ageGroup3) %>%
summarize(meanMemAcc = mean(mem_acc, na.rm = T))
#compute each subject's distribution of responses
memRespSubCounts <- memData %>%
group_by(subID, age, ageGroup3, mem_resp) %>%
drop_na() %>%
summarize(N = n()) %>%
ungroup() %>%
group_by(subID) %>%
mutate(prop = N / sum(N))
memRespCounts <- memRespSubCounts %>%
group_by(ageGroup3, mem_resp) %>%
summarize(meanProp = mean(prop, na.rm = T),
seProp = se(prop))
#plot
memRespPlot <- ggplot(memRespCounts, aes(x = mem_resp, fill = ageGroup3, y = meanProp)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
geom_errorbar(aes(ymin = meanProp - seProp, ymax = meanProp + seProp), width = .1, position = position_dodge(width = .9)) +
#facet_wrap(~ageGroup) +
scale_fill_manual(values = c(color1, color2, color3), name = "Age Group") +
xlab("Response") +
ylab("Proportion of Responses") +
scale_x_discrete(labels = c("High Reward", "Med Reward", "Low Reward", "High Different", "New")) +
geom_hline(yintercept = .2, linetype = "dashed") +
explo.theme +
theme(legend.position = "top",
axis.text.x = element_text(angle = 75, vjust = .5))
memRespPlot
pxps <- read_csv(file.path(dataDir, "model_output/pxps.csv"), col_names = F) %>%
rownames_to_column() %>%
mutate(ageGroup = case_when(rowname == 1 ~ "Children",
rowname == 2 ~ "Adolescents",
rowname == 3 ~ "Adults")) %>%
select(-rowname) %>%
pivot_longer(cols = X1:X6,
values_to = "value",
names_to = "model")%>%
mutate(value_type = "Protected Exceedance Probability")
freq <-read_csv(file.path(dataDir, "model_output/model_freq.csv"), col_names = F) %>%
rownames_to_column() %>%
mutate(ageGroup = case_when(rowname == 1 ~ "Children",
rowname == 2 ~ "Adolescents",
rowname == 3 ~ "Adults")) %>%
select(-rowname) %>%
pivot_longer(cols = X1:X6,
values_to = "value",
names_to = "model")%>%
mutate(value_type = "Model Frequency")
model_stats <- rbind(pxps, freq) %>%
filter(model %in% c("X2", "X3", "X5"))
model_stats$ageGroup <- factor(model_stats$ageGroup, levels = c("Children", "Adolescents", "Adults"))
model_stats_plot <- ggplot(model_stats, aes(x = ageGroup, fill = model, y = value)) +
facet_wrap(~value_type, ncol = 1) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
scale_fill_manual(values = c(color1, color2, color3),
name = "Model",
labels = c("Novelty bias",
"Novelty + uncertainty bias",
"Familiarity-gated uncertainty")) +
xlab("Age Group") +
ylab("Value") +
explo.theme
model_stats_plot
feature.age.trial.model
summary(feature.age.trial.model)
